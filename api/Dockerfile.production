# API（FastAPI）Production Dockerfile
# Optimized Python multi-stage build

# Stage 1: Base Python with system dependencies
FROM python:3.11-slim AS base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

WORKDIR /app

# Stage 2: Dependencies
FROM base AS deps
COPY requirements.txt .
RUN pip install --user -r requirements.txt

# Stage 3: Production runtime
FROM python:3.11-slim AS runner

# Copy system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH=/home/api/.local/bin:$PATH

# Create non-root user
RUN useradd --create-home --shell /bin/bash api
USER api
WORKDIR /app

# Copy Python dependencies
COPY --from=deps --chown=api:api /root/.local /home/api/.local

# Copy application code
COPY --chown=api:api . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
  CMD curl -f http://localhost:8000/api/health || exit 1

# Expose port
EXPOSE 8000

# Start the application with Uvicorn
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "4"]