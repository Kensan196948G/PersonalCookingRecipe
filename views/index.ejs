<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }
        
        .container {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            padding: 40px;
            max-width: 800px;
            width: 100%;
        }
        
        h1 {
            color: #333;
            margin-bottom: 10px;
            font-size: 2.5em;
        }
        
        .subtitle {
            color: #666;
            margin-bottom: 30px;
            font-size: 1.1em;
        }
        
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }
        
        .feature-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            transition: transform 0.3s;
        }
        
        .feature-card:hover {
            transform: translateY(-5px);
        }
        
        .feature-icon {
            font-size: 2em;
            margin-bottom: 10px;
        }
        
        .feature-title {
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .auth-section {
            margin-top: 40px;
            padding: 30px;
            background: #f8f9fa;
            border-radius: 10px;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            color: #555;
            font-weight: 500;
        }
        
        input {
            width: 100%;
            padding: 10px;
            border: 2px solid #e0e0e0;
            border-radius: 5px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        input:focus {
            outline: none;
            border-color: #667eea;
        }
        
        .btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
            transition: opacity 0.3s;
            width: 100%;
            margin-top: 10px;
        }
        
        .btn:hover {
            opacity: 0.9;
        }
        
        .tabs {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }
        
        .tab {
            padding: 10px 20px;
            background: #e0e0e0;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .tab.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        .tab-content {
            display: none;
        }
        
        .tab-content.active {
            display: block;
        }
        
        .api-info {
            margin-top: 30px;
            padding: 20px;
            background: #f0f8ff;
            border-radius: 10px;
            border-left: 4px solid #667eea;
        }
        
        .api-info h3 {
            color: #333;
            margin-bottom: 10px;
        }
        
        .api-info code {
            background: #e0e0e0;
            padding: 2px 6px;
            border-radius: 3px;
            font-family: 'Courier New', monospace;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üç≥ Personal Recipe Manager</h1>
        <p class="subtitle">Your digital cookbook for organizing, planning, and sharing recipes</p>
        
        <div class="features">
            <div class="feature-card">
                <div class="feature-icon">üìö</div>
                <div class="feature-title">Recipe Collection</div>
                <div>Store and organize all your favorite recipes</div>
            </div>
            <div class="feature-card">
                <div class="feature-icon">üóìÔ∏è</div>
                <div class="feature-title">Meal Planning</div>
                <div>Plan your weekly meals with ease</div>
            </div>
            <div class="feature-card">
                <div class="feature-icon">üõí</div>
                <div class="feature-title">Shopping Lists</div>
                <div>Generate shopping lists automatically</div>
            </div>
            <div class="feature-card">
                <div class="feature-icon">üè∑Ô∏è</div>
                <div class="feature-title">Categories & Tags</div>
                <div>Organize recipes your way</div>
            </div>
            <div class="feature-card">
                <div class="feature-icon">üîç</div>
                <div class="feature-title">Smart Search</div>
                <div>Find recipes by ingredients or tags</div>
            </div>
            <div class="feature-card">
                <div class="feature-icon">üìä</div>
                <div class="feature-title">Nutrition Info</div>
                <div>Track nutritional information</div>
            </div>
        </div>
        
        <div class="auth-section">
            <h2>Get Started</h2>
            <div class="tabs">
                <button class="tab active" onclick="switchTab('login')">Login</button>
                <button class="tab" onclick="switchTab('register')">Register</button>
            </div>
            
            <div id="login-tab" class="tab-content active">
                <form id="login-form">
                    <div class="form-group">
                        <label for="login-email">Email</label>
                        <input type="email" id="login-email" required placeholder="your@email.com">
                    </div>
                    <div class="form-group">
                        <label for="login-password">Password</label>
                        <input type="password" id="login-password" required placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢">
                    </div>
                    <button type="submit" class="btn">Login</button>
                </form>
            </div>
            
            <div id="register-tab" class="tab-content">
                <form id="register-form">
                    <div class="form-group">
                        <label for="reg-username">Username</label>
                        <input type="text" id="reg-username" required placeholder="johndoe">
                    </div>
                    <div class="form-group">
                        <label for="reg-email">Email</label>
                        <input type="email" id="reg-email" required placeholder="your@email.com">
                    </div>
                    <div class="form-group">
                        <label for="reg-password">Password</label>
                        <input type="password" id="reg-password" required placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢">
                    </div>
                    <div class="form-group">
                        <label for="reg-firstname">First Name</label>
                        <input type="text" id="reg-firstname" placeholder="John">
                    </div>
                    <div class="form-group">
                        <label for="reg-lastname">Last Name</label>
                        <input type="text" id="reg-lastname" placeholder="Doe">
                    </div>
                    <button type="submit" class="btn">Register</button>
                </form>
            </div>
        </div>
        
        <div class="api-info">
            <h3>API Endpoints</h3>
            <p>Access the following endpoints after authentication:</p>
            <ul>
                <li><code>GET /api/recipes</code> - Get all recipes</li>
                <li><code>POST /api/recipes</code> - Create new recipe</li>
                <li><code>GET /api/categories</code> - Get categories</li>
                <li><code>GET /api/meal-plans</code> - Get meal plans</li>
                <li><code>GET /api/shopping-lists</code> - Get shopping lists</li>
            </ul>
        </div>
    </div>
    
    <script>
        function switchTab(tab) {
            const tabs = document.querySelectorAll('.tab');
            const contents = document.querySelectorAll('.tab-content');
            
            tabs.forEach(t => t.classList.remove('active'));
            contents.forEach(c => c.classList.remove('active'));
            
            if (tab === 'login') {
                tabs[0].classList.add('active');
                document.getElementById('login-tab').classList.add('active');
            } else {
                tabs[1].classList.add('active');
                document.getElementById('register-tab').classList.add('active');
            }
        }
        
        document.getElementById('login-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const email = document.getElementById('login-email').value;
            const password = document.getElementById('login-password').value;
            
            try {
                const response = await fetch('/api/users/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email, password })
                });
                
                const data = await response.json();
                if (response.ok) {
                    alert('Login successful! Token: ' + data.token);
                    localStorage.setItem('token', data.token);
                } else {
                    alert('Login failed: ' + data.message);
                }
            } catch (error) {
                alert('Error: ' + error.message);
            }
        });
        
        document.getElementById('register-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const username = document.getElementById('reg-username').value;
            const email = document.getElementById('reg-email').value;
            const password = document.getElementById('reg-password').value;
            const firstName = document.getElementById('reg-firstname').value;
            const lastName = document.getElementById('reg-lastname').value;
            
            try {
                const response = await fetch('/api/users/register', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username, email, password, firstName, lastName })
                });
                
                const data = await response.json();
                if (response.ok) {
                    alert('Registration successful! You can now login.');
                    switchTab('login');
                } else {
                    alert('Registration failed: ' + data.message);
                }
            } catch (error) {
                alert('Error: ' + error.message);
            }
        });
    </script>
</body>
</html>